{"version":3,"file":"index-DgP54u2m.js","sources":["../../src/main.ts"],"sourcesContent":["/**\n * Trend Compass - Main Application\n * Production version with TypeScript and modern build setup\n */\n\n// Import CSS\nimport './css/enhanced-theme.css'\n\n// API Configuration - Auto-detect environment\nconst API_BASE_URL = (() => {\n    // Check if running locally (Vite dev server)\n    if (window.location.hostname === 'localhost' || \n        window.location.hostname === '127.0.0.1' ||\n        window.location.port === '5173' ||\n        window.location.port === '5174') { // Vite ports\n        \n        // For local development, use the deployed backend on Render\n        // Change this to 'http://localhost:8000' if you're running backend locally\n        return 'https://trend-compass-ai.onrender.com';\n    }\n    // For production deployment on Render or other platforms\n    // When deployed on Render, use the deployed backend API\n    return 'https://trend-compass-ai.onrender.com';\n})();\n\n// DOM Elements\nlet elements: { [key: string]: HTMLElement | null } = {};\n\n/**\n * Initialize the application\n */\nfunction initializeApp(): void {\n    console.log('üöÄ Initializing Trend Compass App...');\n    \n    // Get DOM elements\n    elements = {\n        // Trend Analysis\n        trendForm: document.getElementById('trendForm'),\n        trendQuery: document.getElementById('trendQuery'),\n        trendIndustry: document.getElementById('trendIndustry'),\n        trendTimeframe: document.getElementById('trendTimeframe'),\n        trendCharCount: document.getElementById('trendCharCount'),\n        trendValidation: document.getElementById('trendValidation'),\n        trendLoading: document.getElementById('trendLoading'),\n        trendResults: document.getElementById('trendResults'),\n        trendResultsContent: document.getElementById('trendResultsContent'),\n        \n        // Audience Analysis\n        audienceForm: document.getElementById('audienceForm'),\n        audienceDescription: document.getElementById('audienceDescription'),\n        audienceCategory: document.getElementById('audienceCategory'),\n        audienceRegion: document.getElementById('audienceRegion'),\n        audienceCharCount: document.getElementById('audienceCharCount'),\n        audienceValidation: document.getElementById('audienceValidation'),\n        audienceLoading: document.getElementById('audienceLoading'),\n        audienceResults: document.getElementById('audienceResults'),\n        audienceResultsContent: document.getElementById('audienceResultsContent'),\n        \n        // Global elements\n        errorDisplay: document.getElementById('errorDisplay'),\n        errorMessage: document.getElementById('errorMessage'),\n        apiStatus: document.getElementById('apiStatus'),\n        serverStatusBanner: document.getElementById('serverStatusBanner'),\n        rateLimitDisplay: document.getElementById('rateLimitDisplay'),\n        rateLimitText: document.getElementById('rateLimitText')\n    };\n\n    // Setup event listeners\n    setupEventListeners();\n    \n    // Initialize all features\n    initTabSwitching();\n    initializeCharacterCounters();\n    initializeValidation();\n    \n    // Auto-check API status on load with better session management\n    const hasCheckedThisSession = sessionStorage.getItem('apiChecked');\n    const lastCheckTime = sessionStorage.getItem('lastApiCheck');\n    const now = Date.now();\n    \n    // Only check API if we haven't checked in the last 5 minutes\n    if (!hasCheckedThisSession || !lastCheckTime || (now - parseInt(lastCheckTime)) > 300000) {\n        setTimeout(() => {\n            checkAPIStatus(false); // Don't show loading on initial check\n            sessionStorage.setItem('apiChecked', 'true');\n            sessionStorage.setItem('lastApiCheck', now.toString());\n        }, 1000); // Delayed start to let page load first\n    } else {\n        // Show cached status without making API call\n        const statusElement = elements.apiStatus;\n        if (statusElement) {\n            const indicator = statusElement.querySelector('.status-indicator');\n            const text = statusElement.querySelector('span:last-child');\n            if (indicator) indicator.className = 'status-indicator status-warning';\n            if (text) text.textContent = '‚ö†Ô∏è Status cached - click to refresh';\n        }\n    }\n    \n    // Initialize rate limit display\n    setTimeout(() => {\n        initializeRateLimitDisplay();\n    }, 1000);\n    \n    // Show test controls if in development environment  \n    const isDeveloper = (\n        // URL parameter for developer mode (works on any domain)\n        new URLSearchParams(window.location.search).has('dev') ||\n        new URLSearchParams(window.location.search).get('dev') === 'true' ||\n        // Local development fallback\n        window.location.hostname === 'localhost' || \n        window.location.hostname === '127.0.0.1' ||\n        window.location.port === '8080' ||\n        window.location.href.includes('localhost') ||\n        window.location.href.includes('127.0.0.1')\n    );\n    \n    if (isDeveloper) {\n        const testControls = document.getElementById('testControls');\n        if (testControls) {\n            testControls.style.display = 'block';\n        }\n    }\n    \n    console.log('‚úÖ App initialized successfully!');\n}\n\n/**\n * Setup event listeners\n */\nfunction setupEventListeners(): void {\n    // Trend form submission\n    elements.trendForm?.addEventListener('submit', handleTrendSubmission);\n    \n    // Audience form submission\n    elements.audienceForm?.addEventListener('submit', handleAudienceSubmission);\n    \n    // Enter key in inputs\n    elements.trendQuery?.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleTrendSubmission(e);\n        }\n    });\n}\n\n/**\n * Handle trend form submission\n */\nasync function handleTrendSubmission(e: Event): Promise<void> {\n    e.preventDefault();\n    \n    // Prevent double submission\n    const submitButton = (e.target as HTMLFormElement).querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n    if (submitButton?.disabled) {\n        return;\n    }\n    \n    // Validate input\n    if (!validateTrendInput()) {\n        return;\n    }\n    \n    const formData = {\n        query: (elements.trendQuery as HTMLInputElement)?.value?.trim() || '',\n        industry: (elements.trendIndustry as HTMLSelectElement)?.value?.trim() || null,\n        timeframe: (elements.trendTimeframe as HTMLSelectElement)?.value?.trim() || null\n    };\n    \n    // Disable submit button and show loading state\n    if (submitButton) {\n        submitButton.disabled = true;\n        submitButton.textContent = 'Analyzing...';\n    }\n    showTrendLoading();\n    hideTrendResults();\n    \n    console.log('üåê API URL:', `${API_BASE_URL}/api/trends/analyze`); // Debug logging\n    console.log('üì¶ Form Data:', formData); // Debug logging\n\n    try {\n        // Add 30 second timeout for AI processing\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => {\n            controller.abort();\n        }, 30000);\n        \n        const response = await fetch(`${API_BASE_URL}/api/trends/analyze`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        \n        if (!response.ok) {\n            const errorData = await response.json().catch(() => null);\n            \n            // Handle rate limiting\n            if (response.status === 429) {\n                const resetTime = errorData?.reset_time || 'several hours';\n                throw new Error(`‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait ${resetTime} hours until tomorrow to try again.\\n\\nThis limit helps us control AI API costs during the hackathon.`);\n            }\n            \n            throw new Error(`Server error: ${response.status} ${response.statusText}`);\n        }\n        \n        const result = await response.json();\n        \n        console.log('üéØ API Response:', result); // Debug logging\n        \n        // Update rate limit display from response headers\n        const rateLimit = response.headers.get('X-RateLimit-Limit');\n        const rateLimitRemaining = response.headers.get('X-RateLimit-Remaining');\n        \n        if (rateLimit && rateLimitRemaining) {\n            updateRateLimitDisplay(rateLimitRemaining, rateLimit);\n        }\n        \n        // Hide loading before displaying results\n        hideTrendLoading();\n        \n        // Display results - the backend returns data directly, not nested\n        displayTrendResults(result);\n        \n    } catch (error) {\n        console.error('Trend analysis failed:', error);\n        \n        // Make sure loading is hidden on error\n        hideTrendLoading();\n        \n        let errorMessage = 'Failed to analyze trend. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Cannot connect to server. This could be due to:\\n\\n‚Ä¢ Rate limit exceeded (15 requests per day)\\n‚Ä¢ Server is temporarily down\\n‚Ä¢ Network connectivity issues\\n\\nPlease try again later or reset your daily quota.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else if (error.message.includes('429')) {\n                errorMessage = '‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait until tomorrow to try again, or contact support to reset your quota.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('trendValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        if (submitButton) {\n            submitButton.disabled = false;\n            submitButton.innerHTML = '<i class=\"fas fa-search\"></i> Analyze Trend';\n        }\n    }\n}\n\n/**\n * Handle audience form submission\n */\nasync function handleAudienceSubmission(e: Event): Promise<void> {\n    e.preventDefault();\n    \n    // Prevent double submission\n    const submitButton = (e.target as HTMLFormElement).querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n    if (submitButton?.disabled) {\n        return;\n    }\n    \n    // Validate input\n    if (!validateAudienceInput()) {\n        return;\n    }\n    \n    const formData = {\n        target_audience: (elements.audienceDescription as HTMLTextAreaElement)?.value?.trim() || '',\n        product_category: (elements.audienceCategory as HTMLSelectElement)?.value?.trim() || null,\n        region: (elements.audienceRegion as HTMLSelectElement)?.value?.trim() || null\n    };\n    \n    // Disable submit button and show loading state\n    if (submitButton) {\n        submitButton.disabled = true;\n        submitButton.textContent = 'Analyzing...';\n    }\n    showAudienceLoading();\n    hideAudienceResults();\n    \n    console.log('üåê API URL:', `${API_BASE_URL}/api/audience/analyze`); // Debug logging\n    console.log('üì¶ Form Data:', formData); // Debug logging\n\n    try {\n        // Add 30 second timeout for AI processing\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => {\n            controller.abort();\n        }, 30000);\n        \n        const response = await fetch(`${API_BASE_URL}/api/audience/analyze`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        \n        if (!response.ok) {\n            const errorData = await response.json().catch(() => null);\n            \n            // Handle rate limiting\n            if (response.status === 429) {\n                const resetTime = errorData?.reset_time || 'several hours';\n                throw new Error(`‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait ${resetTime} hours until tomorrow to try again.\\n\\nThis limit helps us control AI API costs during the hackathon.`);\n            }\n            \n            throw new Error(`Server error: ${response.status} ${response.statusText}`);\n        }\n        \n        const result = await response.json();\n        \n        // Update rate limit display from response headers\n        const rateLimit = response.headers.get('X-RateLimit-Limit');\n        const rateLimitRemaining = response.headers.get('X-RateLimit-Remaining');\n        \n        if (rateLimit && rateLimitRemaining) {\n            updateRateLimitDisplay(rateLimitRemaining, rateLimit);\n        }\n        \n        // Hide loading before displaying results\n        hideAudienceLoading();\n        \n        // Display results\n        displayAudienceResults(result);\n        \n    } catch (error) {\n        console.error('Audience analysis failed:', error);\n        \n        // Make sure loading is hidden on error\n        hideAudienceLoading();\n        \n        let errorMessage = 'Failed to analyze audience. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Server is currently down or unreachable. Please try again later or contact support.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('audienceValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        if (submitButton) {\n            submitButton.disabled = false;\n            submitButton.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n        }\n    }\n}\n\n/**\n * Display trend analysis results\n */\nfunction displayTrendResults(analysis: any): void {\n    console.log('üìä Displaying trend results:', analysis); // Debug logging\n    \n    if (elements.trendResultsContent) {\n        if (!analysis) {\n            // Show mock data for testing\n            const mockAnalysis = `\n            <h4>üöÄ Trend Analysis Results</h4>\n            <p><strong>Analysis Status:</strong> ‚úÖ Completed Successfully</p>\n            <p><strong>Test Mode:</strong> This is mock data to verify the display is working.</p>\n            \n            <h5>Key Insights:</h5>\n            <ul>\n                <li>Trend growth potential: High</li>\n                <li>Market adoption: Rising</li>\n                <li>Cultural impact: Significant</li>\n            </ul>\n            \n            <h5>Forecast:</h5>\n            <p>This trend is expected to gain momentum over the next 12 months.</p>\n            `;\n            elements.trendResultsContent.innerHTML = mockAnalysis;\n        } else if (typeof analysis === 'string') {\n            // Handle string response\n            elements.trendResultsContent.innerHTML = formatAnalysisText(analysis);\n        } else {\n            // Handle object response from API\n            const resultsHTML = `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-chart-line\"></i> Trend Analysis Results</h4>\n                    <p><strong>Query:</strong> ${analysis.query || 'N/A'}</p>\n                    <p><strong>Analysis Date:</strong> ${analysis.timestamp ? new Date(analysis.timestamp).toLocaleString() : 'N/A'}</p>\n                </div>\n                \n                ${analysis.summary ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-lightbulb\"></i> Summary</h4>\n                        <div class=\"insight-content\">${formatAnalysisText(analysis.summary)}</div>\n                    </div>\n                ` : ''}\n                \n                ${analysis.insights && analysis.insights.length > 0 ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-trending-up\"></i> Key Insights</h4>\n                        <div class=\"insight-content\">\n                            ${analysis.insights.map((insight: any) => `\n                                <div class=\"insight-item\">\n                                    <strong>${insight.title || insight.category || 'Insight'}</strong>\n                                    <p>${insight.description || insight.content || insight}</p>\n                                    ${insight.confidence ? `<small>Confidence: ${Math.round(insight.confidence * 100)}%</small>` : ''}\n                                </div>\n                            `).join('')}\n                        </div>\n                    </div>\n                ` : ''}\n                \n                ${analysis.recommendations && analysis.recommendations.length > 0 ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-star\"></i> Recommendations</h4>\n                        <div class=\"insight-content\">\n                            <ul>\n                                ${analysis.recommendations.map((rec: string) => `<li>${rec}</li>`).join('')}\n                            </ul>\n                        </div>\n                    </div>\n                ` : ''}\n            `;\n            elements.trendResultsContent.innerHTML = resultsHTML;\n        }\n    }\n    \n    // Show results with animation\n    showTrendResults();\n    \n    // Scroll to results\n    elements.trendResults?.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'start' \n    });\n}\n\n/**\n * Display audience analysis results\n */\nfunction displayAudienceResults(data: any): void {\n    console.log('üë• Displaying audience results:', data); // Debug logging\n    \n    if (!elements.audienceResultsContent) return;\n    \n    // Handle both simple text response and structured data\n    if (typeof data === 'string') {\n        if (!data || data.trim() === '') {\n            // Show mock data for testing\n            const mockAnalysis = `\n            <h4>üë• Audience Analysis Results</h4>\n            <p><strong>Analysis Status:</strong> ‚úÖ Completed Successfully</p>\n            <p><strong>Test Mode:</strong> This is mock data to verify the display is working.</p>\n            \n            <h5>Audience Profile:</h5>\n            <ul>\n                <li>Primary Demographics: Young professionals (25-35)</li>\n                <li>Interests: Technology, sustainability, wellness</li>\n                <li>Behavior: Early adopters, social media active</li>\n            </ul>\n            \n            <h5>Recommendations:</h5>\n            <p>Target this audience through digital channels with authenticity-focused messaging.</p>\n            `;\n            elements.audienceResultsContent.innerHTML = mockAnalysis;\n        } else {\n            elements.audienceResultsContent.innerHTML = formatAnalysisText(data);\n        }\n    } else {\n        // Structured data from original app.js format\n        const resultsHTML = `\n            <div class=\"insight-section\">\n                <h4><i class=\"fas fa-users\"></i> Summary</h4>\n                <div class=\"insight-content\">${data.summary || data.audience_insights || data.analysis || 'Analysis data not available'}</div>\n            </div>\n            \n            ${data.cultural_affinities && data.cultural_affinities.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-heart\"></i> Cultural Affinities</h4>\n                    <div class=\"insight-content\">\n                        ${data.cultural_affinities.map((affinity: any) => `\n                            <div class=\"insight-item\">\n                                <strong>${affinity.title}</strong>\n                                <p>${affinity.description}</p>\n                                <small>Confidence: ${Math.round(affinity.confidence * 100)}%</small>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n            \n            ${data.insights && data.insights.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-lightbulb\"></i> Key Insights</h4>\n                    <div class=\"insight-content\">\n                        ${data.insights.map((insight: any) => `\n                            <div class=\"insight-item\">\n                                <strong>${insight.title}</strong>\n                                <p>${insight.description}</p>\n                                <small>Confidence: ${Math.round(insight.confidence * 100)}%</small>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n            \n            ${data.recommendations && data.recommendations.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-star\"></i> Recommendations</h4>\n                    <div class=\"insight-content\">\n                        <ul>\n                            ${data.recommendations.map((rec: string) => `<li>${rec}</li>`).join('')}\n                        </ul>\n                    </div>\n                </div>\n            ` : ''}\n        `;\n        \n        elements.audienceResultsContent.innerHTML = resultsHTML;\n    }\n    \n    // Show results with animation\n    showAudienceResults();\n    \n    // Scroll to results\n    elements.audienceResults?.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'start' \n    });\n}\n\n/**\n * Update rate limit display\n */\nfunction updateRateLimitDisplay(remaining: string, total: string): void {\n    if (elements.rateLimitText) {\n        const used = parseInt(total) - parseInt(remaining);\n        elements.rateLimitText.textContent = `API Usage: ${used}/${total} requests used today`;\n    }\n    \n    // Make it visible \n    elements.rateLimitDisplay?.classList.remove('d-none');\n    \n    // Update form rate limits if needed\n    const remainingNum = parseInt(remaining);\n    \n    if (remainingNum <= 0) {\n        // Disable forms if no requests remaining\n        const trendBtn = document.getElementById('trendAnalyzeBtn') as HTMLButtonElement;\n        const audienceBtn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n        \n        if (trendBtn) {\n            trendBtn.disabled = true;\n            trendBtn.innerHTML = '<i class=\"fas fa-ban\"></i> Daily Limit Reached';\n        }\n        if (audienceBtn) {\n            audienceBtn.disabled = true;\n            audienceBtn.innerHTML = '<i class=\"fas fa-ban\"></i> Daily Limit Reached';\n        }\n    }\n}\n\n/**\n * Format analysis text for better display\n */\nfunction formatAnalysisText(text: string): string {\n    return text\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n        .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n        .replace(/\\n\\n/g, '</p><p>')\n        .replace(/\\n/g, '<br>')\n        .replace(/^/, '<p>')\n        .replace(/$/, '</p>');\n}\n\n/**\n * Tab switching functionality\n */\nfunction initTabSwitching(): void {\n    const tabButtons = document.querySelectorAll('.tab-button');\n    const tabContents = document.querySelectorAll('.tab-content');\n    \n    if (tabButtons.length === 0 || tabContents.length === 0) {\n        console.error('Tab elements not found');\n        return;\n    }\n    \n    // Initialize tab switching\n    tabButtons.forEach(button => {\n        button.addEventListener('click', function(this: HTMLElement, e: Event) {\n            e.preventDefault();\n            \n            const targetTabId = this.getAttribute('data-tab');\n            if (!targetTabId) return;\n            \n            switchToTab(targetTabId);\n        });\n    });\n    \n    // Ensure first tab is active on load\n    const firstButton = tabButtons[0];\n    const firstTabId = firstButton?.getAttribute('data-tab');\n    if (firstTabId) {\n        switchToTab(firstTabId);\n    }\n}\n\nfunction switchToTab(targetTabId: string): void {\n    const tabButtons = document.querySelectorAll('.tab-button');\n    const tabContents = document.querySelectorAll('.tab-content');\n    \n    // Remove active from all buttons\n    tabButtons.forEach(btn => btn.classList.remove('active'));\n    \n    // Hide all content\n    tabContents.forEach(content => {\n        content.classList.remove('active');\n        (content as HTMLElement).style.display = 'none';\n    });\n    \n    // Activate target button\n    const targetButton = document.querySelector(`[data-tab=\"${targetTabId}\"]`);\n    targetButton?.classList.add('active');\n    \n    // Show target content\n    const targetContent = document.getElementById(targetTabId);\n    if (targetContent) {\n        targetContent.style.display = 'block';\n        setTimeout(() => {\n            targetContent.classList.add('active');\n        }, 50);\n    }\n}\n\n/**\n * Character counter functionality\n */\nfunction initializeCharacterCounters(): void {\n    // Trend query counter\n    if (elements.trendQuery && elements.trendCharCount) {\n        elements.trendQuery.addEventListener('input', function() {\n            updateCharacterCount('trendQuery', 'trendCharCount', 200);\n        });\n    }\n    \n    // Audience description counter\n    if (elements.audienceDescription && elements.audienceCharCount) {\n        elements.audienceDescription.addEventListener('input', function() {\n            updateCharacterCount('audienceDescription', 'audienceCharCount', 300);\n        });\n    }\n}\n\n/**\n * Update character count for an input field\n */\nfunction updateCharacterCount(inputId: string, countId: string, maxLength: number): void {\n    const input = document.getElementById(inputId) as HTMLInputElement | HTMLTextAreaElement;\n    const counter = document.getElementById(countId);\n    \n    if (input && counter) {\n        const count = input.value.length;\n        counter.textContent = count.toString();\n        \n        // Color coding for character count\n        const warningThreshold = maxLength * 0.8; // 80% warning\n        const dangerThreshold = maxLength * 0.9;  // 90% danger\n        \n        if (count > dangerThreshold) {\n            counter.style.color = '#ef4444'; // Red\n        } else if (count > warningThreshold) {\n            counter.style.color = '#f59e0b'; // Orange\n        } else {\n            counter.style.color = '#6b7280'; // Gray\n        }\n    }\n}\n\n/**\n * Validation functionality\n */\nfunction initializeValidation(): void {\n    // Trend query validation\n    if (elements.trendQuery && elements.trendValidation) {\n        elements.trendQuery.addEventListener('blur', function() {\n            validateTrendInput();\n        });\n        \n        elements.trendQuery.addEventListener('input', function() {\n            // Clear validation message on input\n            if (elements.trendValidation) {\n                elements.trendValidation.textContent = '';\n                elements.trendValidation.className = 'validation-message';\n            }\n        });\n    }\n    \n    // Audience description validation\n    if (elements.audienceDescription && elements.audienceValidation) {\n        elements.audienceDescription.addEventListener('blur', function() {\n            validateAudienceInput();\n        });\n        \n        elements.audienceDescription.addEventListener('input', function() {\n            // Clear validation message on input\n            if (elements.audienceValidation) {\n                elements.audienceValidation.textContent = '';\n                elements.audienceValidation.className = 'validation-message';\n            }\n        });\n    }\n}\n\n/**\n * Validate trend input\n */\nfunction validateTrendInput(): boolean {\n    const value = (elements.trendQuery as HTMLInputElement)?.value?.trim() || '';\n    \n    if (value.length < 3) {\n        showValidationMessage('trendValidation', 'Please enter at least 3 characters', 'error');\n        return false;\n    }\n    \n    if (value.length > 200) {\n        showValidationMessage('trendValidation', 'Please keep your query under 200 characters', 'error');\n        return false;\n    }\n    \n    showValidationMessage('trendValidation', 'Looking good! üëç', 'success');\n    return true;\n}\n\n/**\n * Validate audience input\n */\nfunction validateAudienceInput(): boolean {\n    const value = (elements.audienceDescription as HTMLTextAreaElement)?.value?.trim() || '';\n    \n    if (value.length < 10) {\n        showValidationMessage('audienceValidation', 'Please enter at least 10 characters', 'error');\n        return false;\n    }\n    \n    if (value.length > 500) {\n        showValidationMessage('audienceValidation', 'Please keep your description under 500 characters', 'error');\n        return false;\n    }\n    \n    showValidationMessage('audienceValidation', 'Looking good! üëç', 'success');\n    return true;\n}\n\n/**\n * Show validation message\n */\nfunction showValidationMessage(elementId: string, message: string, type: 'success' | 'warning' | 'error'): void {\n    const element = document.getElementById(elementId);\n    if (element) {\n        element.textContent = message;\n        element.className = `validation-message ${type}`;\n    }\n}\n\nfunction hideValidation(elementId: string): void {\n    const element = document.getElementById(elementId);\n    if (element) {\n        element.style.display = 'none';\n        element.classList.remove('show');\n    }\n}\n\n/**\n * Rate limit display\n */\nfunction initializeRateLimitDisplay(): void {\n    // Show rate limit immediately \n    if (elements.rateLimitText) {\n        elements.rateLimitText.textContent = 'API Usage: 15/15 requests available today';\n    }\n    \n    // Make it visible\n    elements.rateLimitDisplay?.classList.remove('d-none');\n}\n\n/**\n * Enhanced API status management with better error handling\n */\nasync function checkAPIStatus(showLoadingState: boolean = false): Promise<void> {\n    const statusElement = elements.apiStatus;\n    const retryBtn = document.querySelector('.btn-retry');\n    \n    // Show loading state if requested\n    if (showLoadingState && statusElement) {\n        updateAPIStatus('warning', 'üîÑ Testing connection...');\n        if (retryBtn) {\n            retryBtn.classList.add('loading');\n            const icon = retryBtn.querySelector('i');\n            if (icon) icon.className = 'fas fa-spinner fa-spin';\n        }\n    }\n    \n    try {\n        // Try multiple endpoints to check API availability\n        const endpoints = ['/health', '/docs', '/'];\n        let apiWorking = false;\n        let lastError = null;\n        \n        for (const endpoint of endpoints) {\n            try {\n                const controller = new AbortController();\n                const timeoutId = setTimeout(() => controller.abort(), 5000);\n                \n                const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n                    method: 'GET',\n                    headers: { 'Accept': 'application/json' },\n                    signal: controller.signal\n                });\n                \n                clearTimeout(timeoutId);\n                \n                // If we get any successful response (including redirects), API is working\n                if (response.status < 500) {\n                    apiWorking = true;\n                    console.log(`‚úÖ API responding at ${endpoint} with status ${response.status}`);\n                    break;\n                }\n            } catch (endpointError) {\n                lastError = endpointError;\n                console.log(`‚ùå Endpoint ${endpoint} failed:`, endpointError);\n            }\n        }\n        \n        if (apiWorking) {\n            updateAPIStatus('healthy', 'üü¢ API Available');\n            hideServerBanner();\n            sessionStorage.removeItem('connectionIssue');\n            \n            if (showLoadingState) {\n                setTimeout(() => {\n                    updateAPIStatus('healthy', 'üü¢ Connection Restored');\n                }, 500);\n            }\n        } else {\n            throw lastError || new Error('All API endpoints failed');\n        }\n        \n    } catch (error) {\n        console.warn('‚ö†Ô∏è API connection issue:', error);\n        \n        // Determine error type for better messaging\n        let errorMessage = 'üî¥ API Unavailable';\n        let statusType: 'error' | 'warning' = 'error';\n        \n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'ÔøΩ Connection Slow';\n                statusType = 'warning';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\n                errorMessage = 'üî¥ Network Issue';\n            } else if (error.message.includes('404')) {\n                errorMessage = 'üü° Server Starting';\n                statusType = 'warning';\n            }\n        }\n        \n        updateAPIStatus(statusType, errorMessage);\n        showServerBanner(error instanceof Error ? error.message : 'Unknown error');\n        sessionStorage.setItem('connectionIssue', 'true');\n    } finally {\n        // Reset loading state\n        if (retryBtn) {\n            retryBtn.classList.remove('loading');\n            const icon = retryBtn.querySelector('i');\n            if (icon) icon.className = 'fas fa-sync-alt';\n        }\n    }\n}\n\n/**\n * Update API status indicator\n */\nfunction updateAPIStatus(status: 'healthy' | 'warning' | 'error', message: string): void {\n    const statusElement = elements.apiStatus;\n    if (!statusElement) return;\n    \n    const indicator = statusElement.querySelector('.status-indicator');\n    const text = statusElement.querySelector('span:last-child');\n    \n    if (indicator) {\n        indicator.className = `status-indicator status-${status}`;\n    }\n    \n    if (text) {\n        text.textContent = message;\n    }\n}\n\n/**\n * Show/hide functions for trend analysis\n */\nfunction showTrendLoading(): void {\n    elements.trendLoading?.classList.remove('d-none');\n    const btn = document.getElementById('analyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = true;\n        btn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Analyzing...';\n    }\n}\n\nfunction hideTrendLoading(): void {\n    elements.trendLoading?.classList.add('d-none');\n    const btn = document.getElementById('analyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = false;\n        btn.innerHTML = '<i class=\"fas fa-search\"></i> Analyze Trend';\n    }\n}\n\nfunction showTrendResults(): void {\n    elements.trendResults?.classList.remove('d-none');\n    elements.trendResults?.classList.add('fade-in');\n}\n\nfunction hideTrendResults(): void {\n    elements.trendResults?.classList.add('d-none');\n}\n\n/**\n * Show/hide functions for audience analysis\n */\nfunction showAudienceLoading(): void {\n    elements.audienceLoading?.classList.remove('d-none');\n    const btn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = true;\n        btn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Analyzing...';\n    }\n}\n\nfunction hideAudienceLoading(): void {\n    elements.audienceLoading?.classList.add('d-none');\n    const btn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = false;\n        btn.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n    }\n}\n\nfunction showAudienceResults(): void {\n    elements.audienceResults?.classList.remove('d-none');\n    elements.audienceResults?.classList.add('fade-in');\n}\n\nfunction hideAudienceResults(): void {\n    elements.audienceResults?.classList.add('d-none');\n}\n\nfunction showServerBanner(errorDetails?: string): void {\n    const banner = elements.serverStatusBanner;\n    if (!banner) return;\n    \n    // Update banner message based on error type\n    const messageSpan = banner.querySelector('.banner-content span');\n    if (messageSpan) {\n        let message = 'üö® Connection Issue Detected';\n        \n        if (errorDetails) {\n            if (errorDetails.includes('404')) {\n                message = '‚ö†Ô∏è Server is starting up or endpoints are unavailable. This is normal during deployment.';\n            } else if (errorDetails.includes('Failed to fetch')) {\n                message = 'üåê Network connectivity issue. Please check your internet connection.';\n            } else if (errorDetails.includes('timeout')) {\n                message = '‚è±Ô∏è Server response is slow. The service might be under heavy load.';\n            } else {\n                message = 'üîß Server connectivity issue. The API service may be temporarily down.';\n            }\n        }\n        \n        messageSpan.textContent = message;\n    }\n    \n    banner.classList.remove('d-none');\n    \n    // Add attention-grabbing animation\n    banner.style.animation = 'slideDown 0.4s ease-out, pulse 2s infinite 1s';\n}\n\nfunction hideServerBanner(): void {\n    const banner = elements.serverStatusBanner;\n    if (banner) {\n        banner.style.animation = '';\n        banner.classList.add('d-none');\n    }\n}\n\n/**\n * Enhanced retry analysis with better state management\n */\nfunction retryAnalysis(): void {\n    console.log('üîÑ Retrying analysis...');\n    \n    // First check API connection\n    checkAPIStatus(true).then(() => {\n        // Clear any previous error states\n        hideAllErrors();\n        \n        // Check which tab is active and retry accordingly\n        const activeTab = document.querySelector('.tab-content.active');\n        \n        if (activeTab?.id === 'trendAnalysisTab') {\n            const form = elements.trendForm as HTMLFormElement;\n            const input = elements.trendQuery as HTMLInputElement;\n            const topic = input?.value?.trim();\n            \n            if (topic && form) {\n                // Reset form state\n                const submitBtn = form.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n                if (submitBtn) {\n                    submitBtn.disabled = false;\n                    submitBtn.innerHTML = '<i class=\"fas fa-chart-line\"></i> Analyze Trends';\n                }\n                \n                // Trigger form submission\n                form.dispatchEvent(new Event('submit'));\n            } else {\n                showValidationMessage('trendValidation', 'Please enter a trend to analyze.', 'warning');\n            }\n            \n        } else if (activeTab?.id === 'audienceAnalysisTab') {\n            const form = elements.audienceForm as HTMLFormElement;\n            const input = elements.audienceDescription as HTMLTextAreaElement;\n            const description = input?.value?.trim();\n            \n            if (description && form) {\n                // Reset form state\n                const submitBtn = form.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n                if (submitBtn) {\n                    submitBtn.disabled = false;\n                    submitBtn.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n                }\n                \n                // Trigger form submission\n                form.dispatchEvent(new Event('submit'));\n            } else {\n                showValidationMessage('audienceValidation', 'Please describe your target audience.', 'warning');\n            }\n        }\n    }).catch(() => {\n        // If API check fails, still allow retry but show warning\n        showValidationMessage('trendValidation', 'Connection issue detected. Retrying anyway...', 'warning');\n        \n        setTimeout(() => {\n            const activeTab = document.querySelector('.tab-content.active');\n            if (activeTab?.id === 'trendAnalysisTab') {\n                const form = elements.trendForm as HTMLFormElement;\n                if (form) form.dispatchEvent(new Event('submit'));\n            } else if (activeTab?.id === 'audienceAnalysisTab') {\n                const form = elements.audienceForm as HTMLFormElement;\n                if (form) form.dispatchEvent(new Event('submit'));\n            }\n        }, 1000);\n    });\n}\n\n/**\n * Hide all error states\n */\nfunction hideAllErrors(): void {\n    hideValidation('trendValidation');\n    hideValidation('audienceValidation');\n    elements.errorDisplay?.classList.add('d-none');\n}\n\n/**\n * Enhanced refresh function for page reset\n */\nfunction refreshApplication(): void {\n    console.log('üîÑ Refreshing application...');\n    \n    // Clear all cached data\n    sessionStorage.clear();\n    localStorage.removeItem('apiStatusCache');\n    \n    // Reset all form states\n    resetAllForms();\n    \n    // Hide all results and errors\n    hideAllResults();\n    hideAllErrors();\n    \n    // Reset API status\n    updateAPIStatus('warning', 'üîÑ Refreshing...');\n    \n    // Re-check API status\n    setTimeout(() => {\n        checkAPIStatus(true);\n    }, 500);\n    \n    // Show refresh feedback\n    const banner = elements.serverStatusBanner;\n    if (banner) {\n        const content = banner.querySelector('.banner-content span');\n        if (content) {\n            const originalText = content.textContent;\n            content.textContent = '‚úÖ Application refreshed successfully!';\n            \n            setTimeout(() => {\n                if (content && originalText) {\n                    content.textContent = originalText;\n                }\n            }, 3000);\n        }\n    }\n}\n\n/**\n * Reset all forms to initial state\n */\nfunction resetAllForms(): void {\n    // Reset trend form\n    const trendForm = elements.trendForm as HTMLFormElement;\n    if (trendForm) {\n        trendForm.reset();\n        updateCharacterCount('trendQuery', 'trendCharCount', 200);\n        \n        const submitBtn = trendForm.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n        if (submitBtn) {\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = '<i class=\"fas fa-chart-line\"></i> Analyze Trends';\n        }\n    }\n    \n    // Reset audience form\n    const audienceForm = elements.audienceForm as HTMLFormElement;\n    if (audienceForm) {\n        audienceForm.reset();\n        updateCharacterCount('audienceDescription', 'audienceCharCount', 300);\n        \n        const submitBtn = audienceForm.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n        if (submitBtn) {\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n        }\n    }\n}\n\n/**\n * Hide all results\n */\nfunction hideAllResults(): void {\n    hideTrendResults();\n    hideAudienceResults();\n    hideTrendLoading();\n    hideAudienceLoading();\n}\n\n/**\n * Advanced options toggle\n */\nfunction toggleAdvancedOptions(type: 'trend' | 'audience'): void {\n    const elementId = type === 'trend' ? 'trendAdvanced' : 'audienceAdvanced';\n    const element = document.getElementById(elementId);\n    \n    if (element) {\n        if (element.style.display === 'none' || !element.style.display) {\n            element.style.display = 'block';\n            element.classList.add('show');\n        } else {\n            element.style.display = 'none';\n            element.classList.remove('show');\n        }\n    }\n}\n\n/**\n * Helper functions\n */\nfunction showSampleInputs(): void {\n    const activeTab = document.querySelector('.tab-content.active');\n    \n    if (activeTab?.id === 'trendAnalysisTab') {\n        fillRandomTrend();\n    } else if (activeTab?.id === 'audienceAnalysisTab') {\n        fillRandomAudience();\n    }\n}\n\nfunction fillRandomTrend(): void {\n    const samples = [\n        \"sustainable fashion trends\",\n        \"AI-generated art movement\",\n        \"plant-based meat alternatives\",\n        \"remote work culture shift\",\n        \"digital minimalism lifestyle\",\n        \"wellness technology adoption\",\n        \"circular economy practices\",\n        \"virtual reality fitness\",\n        \"social commerce growth\",\n        \"micro-mobility transport\"\n    ];\n    \n    const randomSample = samples[Math.floor(Math.random() * samples.length)];\n    const input = elements.trendQuery as HTMLInputElement;\n    if (input) {\n        input.value = randomSample;\n        // Trigger character count update\n        const event = new Event('input');\n        input.dispatchEvent(event);\n        input.focus();\n    }\n}\n\nfunction fillRandomAudience(): void {\n    const samples = [\n        \"Gen Z eco-conscious consumers aged 18-25 who prioritize sustainability and ethical brands in their purchasing decisions\",\n        \"Tech-savvy millennials working remotely with high disposable income, interested in productivity tools and work-life balance\",\n        \"Luxury fashion enthusiasts aged 25-40 in urban areas who value craftsmanship and exclusive designer pieces\",\n        \"Health-conscious baby boomers interested in wellness technology, fitness tracking, and preventive healthcare solutions\",\n        \"Creative professionals and artists who embrace digital tools, value authenticity, and seek platforms for self-expression\",\n        \"Young parents seeking convenient, family-friendly products and services that save time while ensuring safety\",\n        \"College students passionate about social justice, environmental causes, and affordable lifestyle brands\",\n        \"High-income professionals in finance who value premium, time-saving solutions and status symbol products\"\n    ];\n    \n    const randomSample = samples[Math.floor(Math.random() * samples.length)];\n    const input = elements.audienceDescription as HTMLTextAreaElement;\n    if (input) {\n        input.value = randomSample;\n        // Trigger character count update\n        const event = new Event('input');\n        input.dispatchEvent(event);\n        input.focus();\n    }\n}\n\nfunction clearAllInputs(): void {\n    // Clear trend inputs\n    const trendQuery = elements.trendQuery as HTMLInputElement;\n    const trendIndustry = elements.trendIndustry as HTMLSelectElement;\n    const trendTimeframe = elements.trendTimeframe as HTMLSelectElement;\n    \n    if (trendQuery) {\n        trendQuery.value = '';\n        trendQuery.dispatchEvent(new Event('input'));\n    }\n    if (trendIndustry) trendIndustry.selectedIndex = 0;\n    if (trendTimeframe) trendTimeframe.selectedIndex = 1; // Default to \"1year\"\n    \n    // Clear audience inputs\n    const audienceDesc = elements.audienceDescription as HTMLTextAreaElement;\n    const audienceCategory = elements.audienceCategory as HTMLSelectElement;\n    const audienceRegion = elements.audienceRegion as HTMLSelectElement;\n    \n    if (audienceDesc) {\n        audienceDesc.value = '';\n        audienceDesc.dispatchEvent(new Event('input'));\n    }\n    if (audienceCategory) audienceCategory.selectedIndex = 0;\n    if (audienceRegion) audienceRegion.selectedIndex = 0;\n    \n    // Clear validation messages\n    const trendValidation = elements.trendValidation;\n    const audienceValidation = elements.audienceValidation;\n    \n    if (trendValidation) {\n        trendValidation.textContent = '';\n        trendValidation.className = 'validation-message';\n    }\n    if (audienceValidation) {\n        audienceValidation.textContent = '';\n        audienceValidation.className = 'validation-message';\n    }\n}\n\nfunction testConnection(): void {\n    checkAPIStatus(true);\n}\n\nfunction clearCache(): void {\n    sessionStorage.clear();\n    localStorage.clear();\n    refreshApplication();\n}\n\n/**\n * Export results (placeholder)\n */\nfunction exportResults(type: 'trend' | 'audience'): void {\n    console.log(`üìÑ Exporting ${type} results...`);\n    alert(`Export feature coming soon! (${type} analysis)`);\n}\n\n/**\n * Save results (placeholder)\n */\nfunction saveResults(type: 'trend' | 'audience'): void {\n    console.log(`üíæ Saving ${type} results...`);\n    alert(`Save feature coming soon! (${type} analysis)`);\n}\n\n/**\n * Show about modal (placeholder)\n */\nfunction showAbout(): void {\n    alert('Trend Compass - AI-Powered Trend Forecasting\\n\\nCombining Qloo\\'s cultural affinity data with Gemini LLM for rich, strategic insights.');\n}\n\n/**\n * Show privacy modal (placeholder)\n */\nfunction showPrivacy(): void {\n    alert('Privacy Policy\\n\\nYour data is processed securely and not stored permanently. Analysis requests are sent to our API for processing only.');\n}\n\n// Make functions available globally for HTML onclick handlers\ndeclare global {\n    interface Window {\n        retryAnalysis: () => void;\n        refreshApplication: () => void;\n        exportResults: (type: 'trend' | 'audience') => void;\n        saveResults: (type: 'trend' | 'audience') => void;\n        checkAPIStatus: (showLoading?: boolean) => Promise<void>;\n        showAbout: () => void;\n        showPrivacy: () => void;\n        toggleAdvancedOptions: (type: 'trend' | 'audience') => void;\n        showSampleInputs: () => void;\n        fillRandomTrend: () => void;\n        fillRandomAudience: () => void;\n        clearAllInputs: () => void;\n        testConnection: () => void;\n        clearCache: () => void;\n    }\n}\n\nwindow.retryAnalysis = retryAnalysis;\nwindow.refreshApplication = refreshApplication;\nwindow.exportResults = exportResults;\nwindow.saveResults = saveResults;\nwindow.checkAPIStatus = checkAPIStatus;\nwindow.showAbout = showAbout;\nwindow.showPrivacy = showPrivacy;\nwindow.toggleAdvancedOptions = toggleAdvancedOptions;\nwindow.showSampleInputs = showSampleInputs;\nwindow.fillRandomTrend = fillRandomTrend;\nwindow.fillRandomAudience = fillRandomAudience;\nwindow.clearAllInputs = clearAllInputs;\nwindow.testConnection = testConnection;\nwindow.clearCache = clearCache;\n\n// Initialize app when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeApp);\n} else {\n    initializeApp();\n}\n\nexport {};\n"],"names":["API_BASE_URL","elements","initializeApp","setupEventListeners","initTabSwitching","initializeCharacterCounters","initializeValidation","hasCheckedThisSession","lastCheckTime","now","checkAPIStatus","statusElement","indicator","text","initializeRateLimitDisplay","testControls","_a","handleTrendSubmission","_b","handleAudienceSubmission","_c","e","submitButton","validateTrendInput","formData","_d","_f","_e","showTrendLoading","hideTrendResults","controller","timeoutId","response","errorData","resetTime","result","rateLimit","rateLimitRemaining","updateRateLimitDisplay","hideTrendLoading","displayTrendResults","error","errorMessage","showValidationMessage","validateAudienceInput","showAudienceLoading","hideAudienceResults","hideAudienceLoading","displayAudienceResults","analysis","formatAnalysisText","resultsHTML","insight","rec","mockAnalysis","showTrendResults","data","affinity","showAudienceResults","remaining","total","used","trendBtn","audienceBtn","tabButtons","tabContents","button","targetTabId","switchToTab","firstButton","firstTabId","btn","content","targetButton","targetContent","updateCharacterCount","inputId","countId","maxLength","input","counter","count","warningThreshold","dangerThreshold","value","elementId","message","type","element","hideValidation","showLoadingState","retryBtn","updateAPIStatus","icon","endpoints","apiWorking","lastError","endpoint","endpointError","hideServerBanner","statusType","showServerBanner","status","errorDetails","banner","messageSpan","retryAnalysis","hideAllErrors","activeTab","form","submitBtn","refreshApplication","resetAllForms","hideAllResults","originalText","trendForm","audienceForm","toggleAdvancedOptions","showSampleInputs","fillRandomTrend","fillRandomAudience","samples","randomSample","event","clearAllInputs","trendQuery","trendIndustry","trendTimeframe","audienceDesc","audienceCategory","audienceRegion","trendValidation","audienceValidation","testConnection","clearCache","exportResults","saveResults","showAbout","showPrivacy"],"mappings":"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"}