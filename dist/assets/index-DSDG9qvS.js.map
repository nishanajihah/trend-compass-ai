{"version":3,"file":"index-DSDG9qvS.js","sources":["../../src/main.ts"],"sourcesContent":["/**\n * Trend Compass - Main Application\n * Production version with TypeScript and modern build setup\n */\n\n// Import CSS\nimport './css/enhanced-theme.css'\n\n// API Configuration - Auto-detect environment\nconst API_BASE_URL = (() => {\n    // Check if running locally (Vite dev server)\n    if (window.location.hostname === 'localhost' || \n        window.location.hostname === '127.0.0.1' ||\n        window.location.port === '5173' ||\n        window.location.port === '5174') { // Vite ports\n        \n        // For local development, use the deployed backend on Render\n        // Change this to 'http://localhost:8000' if you're running backend locally\n        return 'https://trend-compass-ai.onrender.com';\n    }\n    // For production deployment on Render or other platforms\n    // When deployed on Render, use the deployed backend API\n    return 'https://trend-compass-ai.onrender.com';\n})();\n\n// DOM Elements\nlet elements: { [key: string]: HTMLElement | null } = {};\n\n/**\n * Initialize the application\n */\nfunction initializeApp(): void {\n    console.log('üöÄ Initializing Trend Compass App...');\n    \n    // Get DOM elements\n    elements = {\n        // Trend Analysis\n        trendForm: document.getElementById('trendForm'),\n        trendQuery: document.getElementById('trendQuery'),\n        trendIndustry: document.getElementById('trendIndustry'),\n        trendTimeframe: document.getElementById('trendTimeframe'),\n        trendCharCount: document.getElementById('trendCharCount'),\n        trendValidation: document.getElementById('trendValidation'),\n        trendLoading: document.getElementById('trendLoading'),\n        trendResults: document.getElementById('trendResults'),\n        trendResultsContent: document.getElementById('trendResultsContent'),\n        \n        // Audience Analysis\n        audienceForm: document.getElementById('audienceForm'),\n        audienceDescription: document.getElementById('audienceDescription'),\n        audienceCategory: document.getElementById('audienceCategory'),\n        audienceRegion: document.getElementById('audienceRegion'),\n        audienceCharCount: document.getElementById('audienceCharCount'),\n        audienceValidation: document.getElementById('audienceValidation'),\n        audienceLoading: document.getElementById('audienceLoading'),\n        audienceResults: document.getElementById('audienceResults'),\n        audienceResultsContent: document.getElementById('audienceResultsContent'),\n        \n        // Global elements\n        errorDisplay: document.getElementById('errorDisplay'),\n        errorMessage: document.getElementById('errorMessage'),\n        apiStatus: document.getElementById('apiStatus'),\n        serverStatusBanner: document.getElementById('serverStatusBanner'),\n        rateLimitDisplay: document.getElementById('rateLimitDisplay'),\n        rateLimitText: document.getElementById('rateLimitText')\n    };\n\n    // Setup event listeners\n    setupEventListeners();\n    \n    // Initialize all features\n    initTabSwitching();\n    initializeCharacterCounters();\n    initializeValidation();\n    \n    // Auto-check API status on load (but only once per session to avoid rate limits)\n    const hasCheckedThisSession = sessionStorage.getItem('apiChecked');\n    if (!hasCheckedThisSession) {\n        setTimeout(() => {\n            checkAPIStatus();\n            sessionStorage.setItem('apiChecked', 'true');\n        }, 500);\n    } else {\n        // Just show cached status without making API call\n        const statusElement = elements.apiStatus;\n        if (statusElement) {\n            const indicator = statusElement.querySelector('.status-indicator');\n            const text = statusElement.querySelector('span:last-child');\n            if (indicator) indicator.className = 'status-indicator status-warning';\n            if (text) text.textContent = '‚ö†Ô∏è Status check skipped - conserving API requests';\n        }\n    }\n    \n    // Initialize rate limit display\n    setTimeout(() => {\n        initializeRateLimitDisplay();\n    }, 1000);\n    \n    // Show test controls if in development environment  \n    const isDeveloper = (\n        // URL parameter for developer mode (works on any domain)\n        new URLSearchParams(window.location.search).has('dev') ||\n        new URLSearchParams(window.location.search).get('dev') === 'true' ||\n        // Local development fallback\n        window.location.hostname === 'localhost' || \n        window.location.hostname === '127.0.0.1' ||\n        window.location.port === '8080' ||\n        window.location.href.includes('localhost') ||\n        window.location.href.includes('127.0.0.1')\n    );\n    \n    if (isDeveloper) {\n        const testControls = document.getElementById('testControls');\n        if (testControls) {\n            testControls.style.display = 'block';\n        }\n    }\n    \n    console.log('‚úÖ App initialized successfully!');\n}\n\n/**\n * Setup event listeners\n */\nfunction setupEventListeners(): void {\n    // Trend form submission\n    elements.trendForm?.addEventListener('submit', handleTrendSubmission);\n    \n    // Audience form submission\n    elements.audienceForm?.addEventListener('submit', handleAudienceSubmission);\n    \n    // Enter key in inputs\n    elements.trendQuery?.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleTrendSubmission(e);\n        }\n    });\n}\n\n/**\n * Handle trend form submission\n */\nasync function handleTrendSubmission(e: Event): Promise<void> {\n    e.preventDefault();\n    \n    // Prevent double submission\n    const submitButton = (e.target as HTMLFormElement).querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n    if (submitButton?.disabled) {\n        return;\n    }\n    \n    // Validate input\n    if (!validateTrendInput()) {\n        return;\n    }\n    \n    const formData = {\n        query: (elements.trendQuery as HTMLInputElement)?.value?.trim() || '',\n        industry: (elements.trendIndustry as HTMLSelectElement)?.value?.trim() || null,\n        timeframe: (elements.trendTimeframe as HTMLSelectElement)?.value?.trim() || null\n    };\n    \n    // Disable submit button and show loading state\n    if (submitButton) {\n        submitButton.disabled = true;\n        submitButton.textContent = 'Analyzing...';\n    }\n    showTrendLoading();\n    hideTrendResults();\n    \n    console.log('üåê API URL:', `${API_BASE_URL}/api/trends/analyze`); // Debug logging\n    console.log('üì¶ Form Data:', formData); // Debug logging\n\n    try {\n        // Add 30 second timeout for AI processing\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => {\n            controller.abort();\n        }, 30000);\n        \n        const response = await fetch(`${API_BASE_URL}/api/trends/analyze`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        \n        if (!response.ok) {\n            const errorData = await response.json().catch(() => null);\n            \n            // Handle rate limiting\n            if (response.status === 429) {\n                const resetTime = errorData?.reset_time || 'several hours';\n                throw new Error(`‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait ${resetTime} hours until tomorrow to try again.\\n\\nThis limit helps us control AI API costs during the hackathon.`);\n            }\n            \n            throw new Error(`Server error: ${response.status} ${response.statusText}`);\n        }\n        \n        const result = await response.json();\n        \n        console.log('üéØ API Response:', result); // Debug logging\n        \n        // Update rate limit display from response headers\n        const rateLimit = response.headers.get('X-RateLimit-Limit');\n        const rateLimitRemaining = response.headers.get('X-RateLimit-Remaining');\n        \n        if (rateLimit && rateLimitRemaining) {\n            updateRateLimitDisplay(rateLimitRemaining, rateLimit);\n        }\n        \n        // Hide loading before displaying results\n        hideTrendLoading();\n        \n        // Display results - the backend returns data directly, not nested\n        displayTrendResults(result);\n        \n    } catch (error) {\n        console.error('Trend analysis failed:', error);\n        \n        // Make sure loading is hidden on error\n        hideTrendLoading();\n        \n        let errorMessage = 'Failed to analyze trend. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Cannot connect to server. This could be due to:\\n\\n‚Ä¢ Rate limit exceeded (15 requests per day)\\n‚Ä¢ Server is temporarily down\\n‚Ä¢ Network connectivity issues\\n\\nPlease try again later or reset your daily quota.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else if (error.message.includes('429')) {\n                errorMessage = '‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait until tomorrow to try again, or contact support to reset your quota.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('trendValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        if (submitButton) {\n            submitButton.disabled = false;\n            submitButton.innerHTML = '<i class=\"fas fa-search\"></i> Analyze Trend';\n        }\n    }\n}\n\n/**\n * Handle audience form submission\n */\nasync function handleAudienceSubmission(e: Event): Promise<void> {\n    e.preventDefault();\n    \n    // Prevent double submission\n    const submitButton = (e.target as HTMLFormElement).querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n    if (submitButton?.disabled) {\n        return;\n    }\n    \n    // Validate input\n    if (!validateAudienceInput()) {\n        return;\n    }\n    \n    const formData = {\n        target_audience: (elements.audienceDescription as HTMLTextAreaElement)?.value?.trim() || '',\n        product_category: (elements.audienceCategory as HTMLSelectElement)?.value?.trim() || null,\n        region: (elements.audienceRegion as HTMLSelectElement)?.value?.trim() || null\n    };\n    \n    // Disable submit button and show loading state\n    if (submitButton) {\n        submitButton.disabled = true;\n        submitButton.textContent = 'Analyzing...';\n    }\n    showAudienceLoading();\n    hideAudienceResults();\n    \n    console.log('üåê API URL:', `${API_BASE_URL}/api/audience/analyze`); // Debug logging\n    console.log('üì¶ Form Data:', formData); // Debug logging\n\n    try {\n        // Add 30 second timeout for AI processing\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => {\n            controller.abort();\n        }, 30000);\n        \n        const response = await fetch(`${API_BASE_URL}/api/audience/analyze`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        \n        if (!response.ok) {\n            const errorData = await response.json().catch(() => null);\n            \n            // Handle rate limiting\n            if (response.status === 429) {\n                const resetTime = errorData?.reset_time || 'several hours';\n                throw new Error(`‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait ${resetTime} hours until tomorrow to try again.\\n\\nThis limit helps us control AI API costs during the hackathon.`);\n            }\n            \n            throw new Error(`Server error: ${response.status} ${response.statusText}`);\n        }\n        \n        const result = await response.json();\n        \n        // Update rate limit display from response headers\n        const rateLimit = response.headers.get('X-RateLimit-Limit');\n        const rateLimitRemaining = response.headers.get('X-RateLimit-Remaining');\n        \n        if (rateLimit && rateLimitRemaining) {\n            updateRateLimitDisplay(rateLimitRemaining, rateLimit);\n        }\n        \n        // Hide loading before displaying results\n        hideAudienceLoading();\n        \n        // Display results\n        displayAudienceResults(result);\n        \n    } catch (error) {\n        console.error('Audience analysis failed:', error);\n        \n        // Make sure loading is hidden on error\n        hideAudienceLoading();\n        \n        let errorMessage = 'Failed to analyze audience. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Server is currently down or unreachable. Please try again later or contact support.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('audienceValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        if (submitButton) {\n            submitButton.disabled = false;\n            submitButton.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n        }\n    }\n}\n\n/**\n * Analyze trend - main analysis function\n */\nasync function analyzeTrend(topic: string): Promise<void> {\n    console.log(`üîç Analyzing trend: ${topic}`);\n    \n    showTrendLoading();\n    hideTrendError();\n    hideTrendResults();\n    \n    try {\n        // Get advanced options\n        const industry = (elements.trendIndustry as HTMLSelectElement)?.value || '';\n        const timeframe = (elements.trendTimeframe as HTMLSelectElement)?.value || '1year';\n        \n        const response = await fetch(`${API_BASE_URL}/api/trends/analyze`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n                topic,\n                industry: industry || undefined,\n                timeframe \n            })\n        });\n        \n        if (!response.ok) {\n            if (response.status === 429) {\n                throw new Error('Rate limit exceeded. You have reached the daily limit of 15 requests. Please try again tomorrow.');\n            } else if (response.status === 500) {\n                throw new Error('Server error. Please try again later.');\n            } else {\n                throw new Error(`Analysis failed: ${response.statusText}`);\n            }\n        }\n        \n        const result = await response.json();\n        \n        // Update rate limit display from response headers\n        const rateLimit = response.headers.get('X-RateLimit-Limit');\n        const rateLimitRemaining = response.headers.get('X-RateLimit-Remaining');\n        \n        if (rateLimit && rateLimitRemaining) {\n            updateRateLimitDisplay(rateLimitRemaining, rateLimit);\n        }\n        \n        // Hide loading before displaying results\n        hideTrendLoading();\n        \n        // Display results\n        displayTrendResults(result.trend_analysis || result.analysis);\n        \n    } catch (error) {\n        console.error('Trend analysis failed:', error);\n        \n        // Make sure loading is hidden on error\n        hideTrendLoading();\n        \n        let errorMessage = 'Failed to analyze trend. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Cannot connect to server. This could be due to:\\n\\n‚Ä¢ Rate limit exceeded (15 requests per day)\\n‚Ä¢ Server is temporarily down\\n‚Ä¢ Network connectivity issues\\n\\nPlease try again later or reset your daily quota.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else if (error.message.includes('429')) {\n                errorMessage = '‚ö†Ô∏è DAILY LIMIT REACHED (15 requests per day)\\n\\nYou have used all your daily requests. Please wait until tomorrow to try again, or contact support to reset your quota.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('trendValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        const btn = document.getElementById('trendAnalyzeBtn') as HTMLButtonElement;\n        if (btn) {\n            btn.disabled = false;\n            btn.innerHTML = '<i class=\"fas fa-search\"></i> Analyze Trend';\n        }\n    }\n}\n\n/**\n * Analyze audience\n */\nasync function analyzeAudience(description: string): Promise<void> {\n    console.log(`üë• Analyzing audience: ${description}`);\n    \n    showAudienceLoading();\n    hideAudienceError();\n    hideAudienceResults();\n    \n    try {\n        // Get advanced options\n        const category = (elements.audienceCategory as HTMLSelectElement)?.value || '';\n        const region = (elements.audienceRegion as HTMLSelectElement)?.value || '';\n        \n        const response = await fetch(`${API_BASE_URL}/api/trends/audience`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n                description,\n                category: category || undefined,\n                region: region || undefined\n            })\n        });\n        \n        if (!response.ok) {\n            if (response.status === 429) {\n                throw new Error('Rate limit exceeded. You have reached the daily limit of 15 requests. Please try again tomorrow.');\n            } else if (response.status === 500) {\n                throw new Error('Server error. Please try again later.');\n            } else {\n                throw new Error(`Analysis failed: ${response.statusText}`);\n            }\n        }\n        \n        const data = await response.json();\n        \n        // Display results\n        displayAudienceResults(data.audience_insights || data.analysis);\n        \n    } catch (error) {\n        console.error('Audience analysis error:', error);\n        \n        // Make sure loading is hidden on error\n        hideAudienceLoading();\n        \n        let errorMessage = 'Failed to analyze audience. ';\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                errorMessage = 'Request timed out. AI analysis takes time - please try again.';\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError') || error.message.includes('fetch')) {\n                errorMessage = 'üîå Server is currently down or unreachable. Please try again later or contact support.';\n            } else if (error.message.includes('500')) {\n                errorMessage = '‚ö†Ô∏è Server error occurred. Our team has been notified. Please try again in a few minutes.';\n            } else {\n                errorMessage += error.message;\n            }\n        }\n        \n        showValidationMessage('audienceValidation', errorMessage, 'error');\n    } finally {\n        // Re-enable submit button\n        const btn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n        if (btn) {\n            btn.disabled = false;\n            btn.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n        }\n    }\n}\n\n/**\n * Display trend analysis results\n */\nfunction displayTrendResults(analysis: any): void {\n    console.log('üìä Displaying trend results:', analysis); // Debug logging\n    \n    if (elements.trendResultsContent) {\n        if (!analysis) {\n            // Show mock data for testing\n            const mockAnalysis = `\n            <h4>üöÄ Trend Analysis Results</h4>\n            <p><strong>Analysis Status:</strong> ‚úÖ Completed Successfully</p>\n            <p><strong>Test Mode:</strong> This is mock data to verify the display is working.</p>\n            \n            <h5>Key Insights:</h5>\n            <ul>\n                <li>Trend growth potential: High</li>\n                <li>Market adoption: Rising</li>\n                <li>Cultural impact: Significant</li>\n            </ul>\n            \n            <h5>Forecast:</h5>\n            <p>This trend is expected to gain momentum over the next 12 months.</p>\n            `;\n            elements.trendResultsContent.innerHTML = mockAnalysis;\n        } else if (typeof analysis === 'string') {\n            // Handle string response\n            elements.trendResultsContent.innerHTML = formatAnalysisText(analysis);\n        } else {\n            // Handle object response from API\n            const resultsHTML = `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-chart-line\"></i> Trend Analysis Results</h4>\n                    <p><strong>Query:</strong> ${analysis.query || 'N/A'}</p>\n                    <p><strong>Analysis Date:</strong> ${analysis.timestamp ? new Date(analysis.timestamp).toLocaleString() : 'N/A'}</p>\n                </div>\n                \n                ${analysis.summary ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-lightbulb\"></i> Summary</h4>\n                        <div class=\"insight-content\">${formatAnalysisText(analysis.summary)}</div>\n                    </div>\n                ` : ''}\n                \n                ${analysis.insights && analysis.insights.length > 0 ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-trending-up\"></i> Key Insights</h4>\n                        <div class=\"insight-content\">\n                            ${analysis.insights.map((insight: any) => `\n                                <div class=\"insight-item\">\n                                    <strong>${insight.title || insight.category || 'Insight'}</strong>\n                                    <p>${insight.description || insight.content || insight}</p>\n                                    ${insight.confidence ? `<small>Confidence: ${Math.round(insight.confidence * 100)}%</small>` : ''}\n                                </div>\n                            `).join('')}\n                        </div>\n                    </div>\n                ` : ''}\n                \n                ${analysis.recommendations && analysis.recommendations.length > 0 ? `\n                    <div class=\"insight-section\">\n                        <h4><i class=\"fas fa-star\"></i> Recommendations</h4>\n                        <div class=\"insight-content\">\n                            <ul>\n                                ${analysis.recommendations.map((rec: string) => `<li>${rec}</li>`).join('')}\n                            </ul>\n                        </div>\n                    </div>\n                ` : ''}\n            `;\n            elements.trendResultsContent.innerHTML = resultsHTML;\n        }\n    }\n    \n    // Show results with animation\n    showTrendResults();\n    \n    // Scroll to results\n    elements.trendResults?.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'start' \n    });\n}\n\n/**\n * Display audience analysis results\n */\nfunction displayAudienceResults(data: any): void {\n    console.log('üë• Displaying audience results:', data); // Debug logging\n    \n    if (!elements.audienceResultsContent) return;\n    \n    // Handle both simple text response and structured data\n    if (typeof data === 'string') {\n        if (!data || data.trim() === '') {\n            // Show mock data for testing\n            const mockAnalysis = `\n            <h4>üë• Audience Analysis Results</h4>\n            <p><strong>Analysis Status:</strong> ‚úÖ Completed Successfully</p>\n            <p><strong>Test Mode:</strong> This is mock data to verify the display is working.</p>\n            \n            <h5>Audience Profile:</h5>\n            <ul>\n                <li>Primary Demographics: Young professionals (25-35)</li>\n                <li>Interests: Technology, sustainability, wellness</li>\n                <li>Behavior: Early adopters, social media active</li>\n            </ul>\n            \n            <h5>Recommendations:</h5>\n            <p>Target this audience through digital channels with authenticity-focused messaging.</p>\n            `;\n            elements.audienceResultsContent.innerHTML = mockAnalysis;\n        } else {\n            elements.audienceResultsContent.innerHTML = formatAnalysisText(data);\n        }\n    } else {\n        // Structured data from original app.js format\n        const resultsHTML = `\n            <div class=\"insight-section\">\n                <h4><i class=\"fas fa-users\"></i> Summary</h4>\n                <div class=\"insight-content\">${data.summary || data.audience_insights || data.analysis || 'Analysis data not available'}</div>\n            </div>\n            \n            ${data.cultural_affinities && data.cultural_affinities.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-heart\"></i> Cultural Affinities</h4>\n                    <div class=\"insight-content\">\n                        ${data.cultural_affinities.map((affinity: any) => `\n                            <div class=\"insight-item\">\n                                <strong>${affinity.title}</strong>\n                                <p>${affinity.description}</p>\n                                <small>Confidence: ${Math.round(affinity.confidence * 100)}%</small>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n            \n            ${data.insights && data.insights.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-lightbulb\"></i> Key Insights</h4>\n                    <div class=\"insight-content\">\n                        ${data.insights.map((insight: any) => `\n                            <div class=\"insight-item\">\n                                <strong>${insight.title}</strong>\n                                <p>${insight.description}</p>\n                                <small>Confidence: ${Math.round(insight.confidence * 100)}%</small>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n            \n            ${data.recommendations && data.recommendations.length > 0 ? `\n                <div class=\"insight-section\">\n                    <h4><i class=\"fas fa-star\"></i> Recommendations</h4>\n                    <div class=\"insight-content\">\n                        <ul>\n                            ${data.recommendations.map((rec: string) => `<li>${rec}</li>`).join('')}\n                        </ul>\n                    </div>\n                </div>\n            ` : ''}\n        `;\n        \n        elements.audienceResultsContent.innerHTML = resultsHTML;\n    }\n    \n    // Show results with animation\n    showAudienceResults();\n    \n    // Scroll to results\n    elements.audienceResults?.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'start' \n    });\n}\n\n/**\n * Update rate limit display\n */\nfunction updateRateLimitDisplay(remaining: string, total: string): void {\n    if (elements.rateLimitText) {\n        const used = parseInt(total) - parseInt(remaining);\n        elements.rateLimitText.textContent = `API Usage: ${used}/${total} requests used today`;\n    }\n    \n    // Make it visible \n    elements.rateLimitDisplay?.classList.remove('d-none');\n    \n    // Update form rate limits if needed\n    const remainingNum = parseInt(remaining);\n    \n    if (remainingNum <= 0) {\n        // Disable forms if no requests remaining\n        const trendBtn = document.getElementById('trendAnalyzeBtn') as HTMLButtonElement;\n        const audienceBtn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n        \n        if (trendBtn) {\n            trendBtn.disabled = true;\n            trendBtn.innerHTML = '<i class=\"fas fa-ban\"></i> Daily Limit Reached';\n        }\n        if (audienceBtn) {\n            audienceBtn.disabled = true;\n            audienceBtn.innerHTML = '<i class=\"fas fa-ban\"></i> Daily Limit Reached';\n        }\n    }\n}\n\n/**\n * Format analysis text for better display\n */\nfunction formatAnalysisText(text: string): string {\n    return text\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n        .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n        .replace(/\\n\\n/g, '</p><p>')\n        .replace(/\\n/g, '<br>')\n        .replace(/^/, '<p>')\n        .replace(/$/, '</p>');\n}\n\n/**\n * Tab switching functionality\n */\nfunction initTabSwitching(): void {\n    const tabButtons = document.querySelectorAll('.tab-button');\n    const tabContents = document.querySelectorAll('.tab-content');\n    \n    if (tabButtons.length === 0 || tabContents.length === 0) {\n        console.error('Tab elements not found');\n        return;\n    }\n    \n    // Initialize tab switching\n    tabButtons.forEach(button => {\n        button.addEventListener('click', function(this: HTMLElement, e: Event) {\n            e.preventDefault();\n            \n            const targetTabId = this.getAttribute('data-tab');\n            if (!targetTabId) return;\n            \n            switchToTab(targetTabId);\n        });\n    });\n    \n    // Ensure first tab is active on load\n    const firstButton = tabButtons[0];\n    const firstTabId = firstButton?.getAttribute('data-tab');\n    if (firstTabId) {\n        switchToTab(firstTabId);\n    }\n}\n\nfunction switchToTab(targetTabId: string): void {\n    const tabButtons = document.querySelectorAll('.tab-button');\n    const tabContents = document.querySelectorAll('.tab-content');\n    \n    // Remove active from all buttons\n    tabButtons.forEach(btn => btn.classList.remove('active'));\n    \n    // Hide all content\n    tabContents.forEach(content => {\n        content.classList.remove('active');\n        (content as HTMLElement).style.display = 'none';\n    });\n    \n    // Activate target button\n    const targetButton = document.querySelector(`[data-tab=\"${targetTabId}\"]`);\n    targetButton?.classList.add('active');\n    \n    // Show target content\n    const targetContent = document.getElementById(targetTabId);\n    if (targetContent) {\n        targetContent.style.display = 'block';\n        setTimeout(() => {\n            targetContent.classList.add('active');\n        }, 50);\n    }\n}\n\n/**\n * Character counter functionality\n */\nfunction initializeCharacterCounters(): void {\n    // Trend query counter\n    if (elements.trendQuery && elements.trendCharCount) {\n        elements.trendQuery.addEventListener('input', function() {\n            const count = (this as HTMLInputElement).value.length;\n            if (elements.trendCharCount) {\n                elements.trendCharCount.textContent = count.toString();\n                \n                // Color coding for character count (matching original app.js)\n                if (count > 180) {\n                    elements.trendCharCount.style.color = '#ef4444'; // Red\n                } else if (count > 160) {\n                    elements.trendCharCount.style.color = '#f59e0b'; // Orange\n                } else {\n                    elements.trendCharCount.style.color = '#6b7280'; // Gray\n                }\n            }\n        });\n    }\n    \n    // Audience description counter\n    if (elements.audienceDescription && elements.audienceCharCount) {\n        elements.audienceDescription.addEventListener('input', function() {\n            const count = (this as HTMLTextAreaElement).value.length;\n            if (elements.audienceCharCount) {\n                elements.audienceCharCount.textContent = count.toString();\n                \n                // Color coding for character count (matching original app.js)\n                if (count > 450) {\n                    elements.audienceCharCount.style.color = '#ef4444'; // Red\n                } else if (count > 400) {\n                    elements.audienceCharCount.style.color = '#f59e0b'; // Orange\n                } else {\n                    elements.audienceCharCount.style.color = '#6b7280'; // Gray\n                }\n            }\n        });\n    }\n}\n\n/**\n * Validation functionality\n */\nfunction initializeValidation(): void {\n    // Trend query validation\n    if (elements.trendQuery && elements.trendValidation) {\n        elements.trendQuery.addEventListener('blur', function() {\n            validateTrendInput();\n        });\n        \n        elements.trendQuery.addEventListener('input', function() {\n            // Clear validation message on input\n            if (elements.trendValidation) {\n                elements.trendValidation.textContent = '';\n                elements.trendValidation.className = 'validation-message';\n            }\n        });\n    }\n    \n    // Audience description validation\n    if (elements.audienceDescription && elements.audienceValidation) {\n        elements.audienceDescription.addEventListener('blur', function() {\n            validateAudienceInput();\n        });\n        \n        elements.audienceDescription.addEventListener('input', function() {\n            // Clear validation message on input\n            if (elements.audienceValidation) {\n                elements.audienceValidation.textContent = '';\n                elements.audienceValidation.className = 'validation-message';\n            }\n        });\n    }\n}\n\n/**\n * Validate trend input\n */\nfunction validateTrendInput(): boolean {\n    const value = (elements.trendQuery as HTMLInputElement)?.value?.trim() || '';\n    \n    if (value.length < 3) {\n        showValidationMessage('trendValidation', 'Please enter at least 3 characters', 'error');\n        return false;\n    }\n    \n    if (value.length > 200) {\n        showValidationMessage('trendValidation', 'Please keep your query under 200 characters', 'error');\n        return false;\n    }\n    \n    showValidationMessage('trendValidation', 'Looking good! üëç', 'success');\n    return true;\n}\n\n/**\n * Validate audience input\n */\nfunction validateAudienceInput(): boolean {\n    const value = (elements.audienceDescription as HTMLTextAreaElement)?.value?.trim() || '';\n    \n    if (value.length < 10) {\n        showValidationMessage('audienceValidation', 'Please enter at least 10 characters', 'error');\n        return false;\n    }\n    \n    if (value.length > 500) {\n        showValidationMessage('audienceValidation', 'Please keep your description under 500 characters', 'error');\n        return false;\n    }\n    \n    showValidationMessage('audienceValidation', 'Looking good! üëç', 'success');\n    return true;\n}\n\n/**\n * Show validation message\n */\nfunction showValidationMessage(elementId: string, message: string, type: 'success' | 'warning' | 'error'): void {\n    const element = document.getElementById(elementId);\n    if (element) {\n        element.textContent = message;\n        element.className = `validation-message ${type}`;\n    }\n}\n\nfunction hideValidation(elementId: string): void {\n    const element = document.getElementById(elementId);\n    if (element) {\n        element.style.display = 'none';\n        element.classList.remove('show');\n    }\n}\n\n/**\n * Rate limit display\n */\nfunction initializeRateLimitDisplay(): void {\n    // Show rate limit immediately \n    if (elements.rateLimitText) {\n        elements.rateLimitText.textContent = 'API Usage: 15/15 requests available today';\n    }\n    \n    // Make it visible\n    elements.rateLimitDisplay?.classList.remove('d-none');\n}\n\n/**\n * Check API status\n */\nasync function checkAPIStatus(): Promise<void> {\n    try {\n        const response = await fetch(`${API_BASE_URL}/health`, {\n            method: 'GET',\n            headers: { 'Accept': 'application/json' }\n        });\n        \n        if (response.ok) {\n            updateAPIStatus('healthy', 'üü¢ API Connected');\n            hideServerBanner();\n        } else {\n            throw new Error('API health check failed');\n        }\n        \n    } catch (error) {\n        console.warn('‚ö†Ô∏è API connection issue:', error);\n        updateAPIStatus('error', 'üî¥ API Disconnected');\n        showServerBanner();\n    }\n}\n\n/**\n * Update API status indicator\n */\nfunction updateAPIStatus(status: 'healthy' | 'warning' | 'error', message: string): void {\n    const statusElement = elements.apiStatus;\n    if (!statusElement) return;\n    \n    const indicator = statusElement.querySelector('.status-indicator');\n    const text = statusElement.querySelector('span:last-child');\n    \n    if (indicator) {\n        indicator.className = `status-indicator status-${status}`;\n    }\n    \n    if (text) {\n        text.textContent = message;\n    }\n}\n\n/**\n * Show/hide functions for trend analysis\n */\nfunction showTrendLoading(): void {\n    elements.trendLoading?.classList.remove('d-none');\n    const btn = document.getElementById('analyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = true;\n        btn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Analyzing...';\n    }\n}\n\nfunction hideTrendLoading(): void {\n    elements.trendLoading?.classList.add('d-none');\n    const btn = document.getElementById('analyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = false;\n        btn.innerHTML = '<i class=\"fas fa-search\"></i> Analyze Trend';\n    }\n}\n\nfunction showTrendResults(): void {\n    elements.trendResults?.classList.remove('d-none');\n    elements.trendResults?.classList.add('fade-in');\n}\n\nfunction hideTrendResults(): void {\n    elements.trendResults?.classList.add('d-none');\n}\n\nfunction hideTrendError(): void {\n    hideValidation('trendValidation');\n}\n\n/**\n * Show/hide functions for audience analysis\n */\nfunction showAudienceLoading(): void {\n    elements.audienceLoading?.classList.remove('d-none');\n    const btn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = true;\n        btn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Analyzing...';\n    }\n}\n\nfunction hideAudienceLoading(): void {\n    elements.audienceLoading?.classList.add('d-none');\n    const btn = document.getElementById('audienceAnalyzeBtn') as HTMLButtonElement;\n    if (btn) {\n        btn.disabled = false;\n        btn.innerHTML = '<i class=\"fas fa-users\"></i> Analyze Audience';\n    }\n}\n\nfunction showAudienceResults(): void {\n    elements.audienceResults?.classList.remove('d-none');\n    elements.audienceResults?.classList.add('fade-in');\n}\n\nfunction hideAudienceResults(): void {\n    elements.audienceResults?.classList.add('d-none');\n}\n\nfunction hideAudienceError(): void {\n    hideValidation('audienceValidation');\n}\n\nfunction showServerBanner(): void {\n    elements.serverStatusBanner?.classList.remove('d-none');\n}\n\nfunction hideServerBanner(): void {\n    elements.serverStatusBanner?.classList.add('d-none');\n}\n\n/**\n * Retry analysis\n */\nfunction retryAnalysis(): void {\n    // Check which tab is active and retry accordingly\n    const activeTab = document.querySelector('.tab-content.active');\n    if (activeTab?.id === 'trendAnalysisTab') {\n        const input = elements.trendQuery as HTMLInputElement;\n        const topic = input?.value?.trim();\n        if (topic) {\n            analyzeTrend(topic);\n        } else {\n            hideValidation('trendValidation');\n        }\n    } else if (activeTab?.id === 'audienceAnalysisTab') {\n        const input = elements.audienceDescription as HTMLTextAreaElement;\n        const description = input?.value?.trim();\n        if (description) {\n            analyzeAudience(description);\n        } else {\n            hideValidation('audienceValidation');\n        }\n    }\n}\n\n/**\n * Advanced options toggle\n */\nfunction toggleAdvancedOptions(type: 'trend' | 'audience'): void {\n    const elementId = type === 'trend' ? 'trendAdvanced' : 'audienceAdvanced';\n    const element = document.getElementById(elementId);\n    \n    if (element) {\n        if (element.style.display === 'none' || !element.style.display) {\n            element.style.display = 'block';\n            element.classList.add('show');\n        } else {\n            element.style.display = 'none';\n            element.classList.remove('show');\n        }\n    }\n}\n\n/**\n * Helper functions\n */\nfunction showSampleInputs(): void {\n    const activeTab = document.querySelector('.tab-content.active');\n    \n    if (activeTab?.id === 'trendAnalysisTab') {\n        fillRandomTrend();\n    } else if (activeTab?.id === 'audienceAnalysisTab') {\n        fillRandomAudience();\n    }\n}\n\nfunction fillRandomTrend(): void {\n    const samples = [\n        \"sustainable fashion trends\",\n        \"AI-generated art movement\",\n        \"plant-based meat alternatives\",\n        \"remote work culture shift\",\n        \"digital minimalism lifestyle\",\n        \"wellness technology adoption\",\n        \"circular economy practices\",\n        \"virtual reality fitness\",\n        \"social commerce growth\",\n        \"micro-mobility transport\"\n    ];\n    \n    const randomSample = samples[Math.floor(Math.random() * samples.length)];\n    const input = elements.trendQuery as HTMLInputElement;\n    if (input) {\n        input.value = randomSample;\n        // Trigger character count update\n        const event = new Event('input');\n        input.dispatchEvent(event);\n        input.focus();\n    }\n}\n\nfunction fillRandomAudience(): void {\n    const samples = [\n        \"Gen Z eco-conscious consumers aged 18-25 who prioritize sustainability and ethical brands in their purchasing decisions\",\n        \"Tech-savvy millennials working remotely with high disposable income, interested in productivity tools and work-life balance\",\n        \"Luxury fashion enthusiasts aged 25-40 in urban areas who value craftsmanship and exclusive designer pieces\",\n        \"Health-conscious baby boomers interested in wellness technology, fitness tracking, and preventive healthcare solutions\",\n        \"Creative professionals and artists who embrace digital tools, value authenticity, and seek platforms for self-expression\",\n        \"Young parents seeking convenient, family-friendly products and services that save time while ensuring safety\",\n        \"College students passionate about social justice, environmental causes, and affordable lifestyle brands\",\n        \"High-income professionals in finance who value premium, time-saving solutions and status symbol products\"\n    ];\n    \n    const randomSample = samples[Math.floor(Math.random() * samples.length)];\n    const input = elements.audienceDescription as HTMLTextAreaElement;\n    if (input) {\n        input.value = randomSample;\n        // Trigger character count update\n        const event = new Event('input');\n        input.dispatchEvent(event);\n        input.focus();\n    }\n}\n\nfunction clearAllInputs(): void {\n    // Clear trend inputs\n    const trendQuery = elements.trendQuery as HTMLInputElement;\n    const trendIndustry = elements.trendIndustry as HTMLSelectElement;\n    const trendTimeframe = elements.trendTimeframe as HTMLSelectElement;\n    \n    if (trendQuery) {\n        trendQuery.value = '';\n        trendQuery.dispatchEvent(new Event('input'));\n    }\n    if (trendIndustry) trendIndustry.selectedIndex = 0;\n    if (trendTimeframe) trendTimeframe.selectedIndex = 1; // Default to \"1year\"\n    \n    // Clear audience inputs\n    const audienceDesc = elements.audienceDescription as HTMLTextAreaElement;\n    const audienceCategory = elements.audienceCategory as HTMLSelectElement;\n    const audienceRegion = elements.audienceRegion as HTMLSelectElement;\n    \n    if (audienceDesc) {\n        audienceDesc.value = '';\n        audienceDesc.dispatchEvent(new Event('input'));\n    }\n    if (audienceCategory) audienceCategory.selectedIndex = 0;\n    if (audienceRegion) audienceRegion.selectedIndex = 0;\n    \n    // Clear validation messages\n    const trendValidation = elements.trendValidation;\n    const audienceValidation = elements.audienceValidation;\n    \n    if (trendValidation) {\n        trendValidation.textContent = '';\n        trendValidation.className = 'validation-message';\n    }\n    if (audienceValidation) {\n        audienceValidation.textContent = '';\n        audienceValidation.className = 'validation-message';\n    }\n}\n\nfunction testConnection(): void {\n    checkAPIStatus();\n}\n\nfunction clearCache(): void {\n    sessionStorage.clear();\n    localStorage.clear();\n    location.reload();\n}\n\n/**\n * Export results (placeholder)\n */\nfunction exportResults(type: 'trend' | 'audience'): void {\n    console.log(`üìÑ Exporting ${type} results...`);\n    alert(`Export feature coming soon! (${type} analysis)`);\n}\n\n/**\n * Save results (placeholder)\n */\nfunction saveResults(type: 'trend' | 'audience'): void {\n    console.log(`üíæ Saving ${type} results...`);\n    alert(`Save feature coming soon! (${type} analysis)`);\n}\n\n/**\n * Show about modal (placeholder)\n */\nfunction showAbout(): void {\n    alert('Trend Compass - AI-Powered Trend Forecasting\\n\\nCombining Qloo\\'s cultural affinity data with Gemini LLM for rich, strategic insights.');\n}\n\n/**\n * Show privacy modal (placeholder)\n */\nfunction showPrivacy(): void {\n    alert('Privacy Policy\\n\\nYour data is processed securely and not stored permanently. Analysis requests are sent to our API for processing only.');\n}\n\n// Make functions available globally for HTML onclick handlers\ndeclare global {\n    interface Window {\n        retryAnalysis: () => void;\n        exportResults: (type: 'trend' | 'audience') => void;\n        saveResults: (type: 'trend' | 'audience') => void;\n        checkAPIStatus: () => Promise<void>;\n        showAbout: () => void;\n        showPrivacy: () => void;\n        toggleAdvancedOptions: (type: 'trend' | 'audience') => void;\n        showSampleInputs: () => void;\n        fillRandomTrend: () => void;\n        fillRandomAudience: () => void;\n        clearAllInputs: () => void;\n        testConnection: () => void;\n        clearCache: () => void;\n    }\n}\n\nwindow.retryAnalysis = retryAnalysis;\nwindow.exportResults = exportResults;\nwindow.saveResults = saveResults;\nwindow.checkAPIStatus = checkAPIStatus;\nwindow.showAbout = showAbout;\nwindow.showPrivacy = showPrivacy;\nwindow.toggleAdvancedOptions = toggleAdvancedOptions;\nwindow.showSampleInputs = showSampleInputs;\nwindow.fillRandomTrend = fillRandomTrend;\nwindow.fillRandomAudience = fillRandomAudience;\nwindow.clearAllInputs = clearAllInputs;\nwindow.testConnection = testConnection;\nwindow.clearCache = clearCache;\n\n// Initialize app when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeApp);\n} else {\n    initializeApp();\n}\n\nexport {};\n"],"names":["API_BASE_URL","elements","initializeApp","setupEventListeners","initTabSwitching","initializeCharacterCounters","initializeValidation","checkAPIStatus","statusElement","indicator","text","initializeRateLimitDisplay","testControls","_a","handleTrendSubmission","_b","handleAudienceSubmission","_c","e","submitButton","validateTrendInput","formData","_d","_f","_e","showTrendLoading","hideTrendResults","controller","timeoutId","response","errorData","resetTime","result","rateLimit","rateLimitRemaining","updateRateLimitDisplay","hideTrendLoading","displayTrendResults","error","errorMessage","showValidationMessage","validateAudienceInput","showAudienceLoading","hideAudienceResults","hideAudienceLoading","displayAudienceResults","analyzeTrend","topic","hideTrendError","industry","timeframe","btn","analyzeAudience","description","hideAudienceError","category","region","data","analysis","formatAnalysisText","resultsHTML","insight","rec","mockAnalysis","showTrendResults","affinity","showAudienceResults","remaining","total","used","trendBtn","audienceBtn","tabButtons","tabContents","button","targetTabId","switchToTab","firstButton","firstTabId","content","targetButton","targetContent","count","value","elementId","message","type","element","hideValidation","updateAPIStatus","hideServerBanner","showServerBanner","status","retryAnalysis","activeTab","input","toggleAdvancedOptions","showSampleInputs","fillRandomTrend","fillRandomAudience","samples","randomSample","event","clearAllInputs","trendQuery","trendIndustry","trendTimeframe","audienceDesc","audienceCategory","audienceRegion","trendValidation","audienceValidation","testConnection","clearCache","exportResults","saveResults","showAbout","showPrivacy"],"mappings":"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"}